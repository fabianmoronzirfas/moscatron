{"version":3,"sources":["renderer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,UAAA,GAAA,OAAA,CAAA,UAAA,CAAA,EACA;AACA;AAEA;AACA;;;AAEA,UAAA,CAAA,WAAA,CAAY,EAAZ,CAAe,QAAf,EAAyB,UAAC,KAAD,EAAa,IAAb,EAAsB;AAC7C;AACA,EAAA,OAAO,CAAC,GAAR,CAAY,KAAZ,EAAmB,IAAnB;AACA,MAAM,OAAO,GAAG,QAAQ,CAAC,cAAT,CAAwB,MAAxB,CAAhB;;AACA,MAAI,OAAO,KAAK,IAAhB,EAAsB;AAEpB,QAAM,IAAI,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAb;AACA,IAAA,IAAI,CAAC,SAAL,GAAiB,wCAAsC,IAAI,CAAC,IAA5D;AACA,IAAA,OAAO,CAAC,WAAR,CAAoB,IAApB;AACD;AACF,CAVD,GAYA;AACA;AACA;AACA;;AACA,UAAA,CAAA,WAAA,CAAY,EAAZ,CAAe,YAAf,EAA6B,UAAC,KAAD,EAAa,IAAb,EAAsB;AACjD;AACA,EAAA,OAAO,CAAC,GAAR,CAAY,KAAZ,EAAmB,IAAnB;AACD,CAHD;AAIA,UAAA,CAAA,WAAA,CAAY,EAAZ,CAAe,cAAf,EAA+B,UAAC,KAAD,EAAa,IAAb,EAAsB;AACnD;AACA,EAAA,OAAO,CAAC,GAAR,CAAY,KAAZ,EAAmB,IAAnB;AACD,CAHD;AAIA,UAAA,CAAA,WAAA,CAAY,EAAZ,CAAe,iBAAf,EAAkC,UAAC,KAAD,EAAa,IAAb,EAAsB;AACtD;AACA,EAAA,OAAO,CAAC,GAAR,CAAY,KAAZ,EAAmB,IAAnB;AACD,CAHD;AAIA,UAAA,CAAA,WAAA,CAAY,EAAZ,CAAe,qBAAf,EAAsC,UAAC,KAAD,EAAa,IAAb,EAAsB;AAC1D;AACA,EAAA,OAAO,CAAC,GAAR,CAAY,KAAZ,EAAmB,IAAnB;AACD,CAHD;AAIA,UAAA,CAAA,WAAA,CAAY,EAAZ,CAAe,oBAAf,EAAqC,UAAC,KAAD,EAAa,IAAb,EAAsB;AACzD;AACA,EAAA,OAAO,CAAC,GAAR,CAAY,KAAZ,EAAmB,IAAnB;AACD,CAHD,GAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"renderer.98e9290a.map","sourceRoot":"../src-renderer","sourcesContent":["import { ipcRenderer } from 'electron';\n// tslint:disable-next-line:no-console\n// console.log('https://www.typescriptlang.org/docs/handbook/react-&-webpack.html');\n\n// const connectBttn = document.getElementById('connect');\n// const disconnectBttn = document.getElementById('disconnect');\n\nipcRenderer.on('broker', (event: any, args: any) => {\n  // tslint:disable-next-line:no-console\n  console.log(event, args);\n  const infoEle = document.getElementById('info');\n  if (infoEle !== null) {\n\n    const node = document.createElement('div');\n    node.innerText = `MQTT broker listening on localhost:${args.port}`;\n    infoEle.appendChild(node);\n  }\n});\n\n// ipcRenderer.on('published', (event: any, args: any) => {\n//   // tslint:disable-next-line:no-console\n//   // console.log(event, args);\n// });\nipcRenderer.on('subscribed', (event: any, args: any) => {\n  // tslint:disable-next-line:no-console\n  console.log(event, args);\n});\nipcRenderer.on('unsubscribed', (event: any, args: any) => {\n  // tslint:disable-next-line:no-console\n  console.log(event, args);\n});\nipcRenderer.on('clientConnected', (event: any, args: any) => {\n  // tslint:disable-next-line:no-console\n  console.log(event, args);\n});\nipcRenderer.on('clientDisconnecting', (event: any, args: any) => {\n  // tslint:disable-next-line:no-console\n  console.log(event, args);\n});\nipcRenderer.on('clientDisconnected', (event: any, args: any) => {\n  // tslint:disable-next-line:no-console\n  console.log(event, args);\n});\n\n// if (connectBttn !== null) {\n//   connectBttn.addEventListener('click', () => {\n//     ipcRenderer.send('connect');\n//   });\n// }\n// if (disconnectBttn !== null) {\n//   disconnectBttn.addEventListener('click', () => {\n//     ipcRenderer.send('disconnect');\n//   });\n// }\n"]}