{"version":3,"sources":["components/MessageStack.tsx","app.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAGA,IAAA,YAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA2B,EAAA,SAAA,CAAA,YAAA,EAAA,MAAA,CAAA;;AAA3B,WAAA,YAAA,GAAA;;AAWC;AAVC;;;;;AAGO,EAAA,YAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACE,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACG,KAAK,KADR,CADF;AAKD,GANM;;AAOT,SAAA,YAAA;AAXA,CAAA,CAA2B,KAAK,CAAC,SAAjC,CAAA;;AAaA,OAAA,CAAA,SAAA,CAAA,GAAe,YAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA,IAAA,KAAA,GAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,QAAA,GAAA,YAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;;AAEA,IAAA,cAAA,GAAA,eAAA,CAAA,OAAA,CAAA,2BAAA,CAAA,CAAA;;AAaA,IAAA,GAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAkB,EAAA,SAAA,CAAA,GAAA,EAAA,MAAA,CAAA;;AAAlB,WAAA,GAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AACU,IAAA,KAAA,CAAA,KAAA,GAA0B;AAChC,MAAA,KAAK,EAAE;AADyB,KAA1B;;AAcA,IAAA,KAAA,CAAA,aAAA,GAAgB,YAAA;AACtB;AACA;AACA,MAAA,OAAO,CAAC,GAAR,CAAY,KAAI,CAAC,KAAjB;AACD,KAJO;;;AAKT;;AAhBQ,EAAA,GAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACE,WACE,iCACE;AAAQ,MAAA,OAAO,EAAE,KAAK;AAAtB,mBADF,EAKE,oBAAC,cAAD,CAAC,OAAD;AAAc,MAAA,QAAQ,EAAE,KAAK,KAAL,CAAW;AAAnC,MALF,CADF;AASD,GAVM;;AAgBT,SAAA,GAAA;AApBA,CAAA,CAAkB,KAAK,CAAC,SAAxB,CAAA;;AAsBA,QAAQ,CAAC,MAAT,CACE,oBAAC,GAAD;AAAK,EAAA,QAAQ,EAAC;AAAd,EADF,EAEE,QAAQ,CAAC,cAAT,CAAwB,MAAxB,CAFF","file":"app.5793fd45.map","sourceRoot":"../src-renderer","sourcesContent":["import * as React from 'react';\nimport {IState} from '../app';\n\nclass MessageStack extends React.Component<{messages: any}, IState> {\n  /**\n   * render\n   */\n  public render() {\n    return (\n      <div className=\"MessageStack\">\n        {this.state}\n      </div>\n    );\n  }\n}\n\nexport default MessageStack;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport Message from './components/Message';\nimport MessageStack from './components/MessageStack';\nexport interface IProps {\n  greeting: string;\n}\n\nexport interface IState {\n  count: number;\n    messages?: {\n      clientId: string,\n      topic: string,\n      payload: string,\n    };\n}\nclass App extends React.Component<IProps, IState> {\n   public state: Readonly<IState> = {\n    count: 0,\n  };\n  public render() {\n    return (\n      <div>\n        <button onClick={this.handleMessage}>get state</button>\n        {/* <button onClick={() => this.setState({ count: this.state.count + 1 })}>\n          This button has been clicked {this.state.count} times.\n        </button> */}\n        <MessageStack messages={this.state.messages} />\n      </div>\n    );\n  }\n  private handleMessage = () => {\n    // return 'foo';\n    // tslint:disable-next-line:no-console\n    console.log(this.state);\n  }\n}\n\nReactDOM.render(\n  <App greeting=\"Hello, crude React world!\" />,\n  document.getElementById(\"main\"),\n);\n"]}