{
  "name": "moscatron",
  "version": "0.1.0",
  "description": "mosca broker meets electron",
  "main": "main/index.js",
  "dependencies": {
    "mosca": "^2.8.3",
    "chalk": "^2.4.1",
    "react": "^16.6.3",
    "react-dom": "^16.6.3"
  },
  "devDependencies": {
    "ts-node": "^7.0.1",
    "typescript": "^3.1.6",
    "electron-builder": "^20.38.2",
    "@types/jest": "^23.3.10",
    "@types/mosca": "^2.8.1",
    "@types/node": "^10.12.12",
    "@types/react": "^16.7.13",
    "@types/react-dom": "^16.0.11",
    "cz-conventional-changelog": "^2.1.0",
    "electron": "3.0.9",
    "electron-reload": "^1.3.0",
    "parcel-bundler": "^1.10.3",
    "spectron": "^5.0.0",
    "tslint": "^5.11.0"
  },
  "engines": {
    "node": ">=8.0.0 < 8.100.0"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start:electron-dev": "NODE_ENV=development electron index.js",
    "postinstall": "electron-builder install-app-deps",
    "pack": "electron-builder --dir",
    "dist": "electron-builder",
    "predist":"npm run build:parcel && npm run build:main",
    "build:main":"tsc -p tsconfig.main.json",
    "start:parcel-dev": "parcel src-renderer/index.html --out-dir interface/ --public-url ./ --target=electron",
    "build:parcel": "rm interface/app.*.* interface/index.html && parcel build ./src-renderer/index.html --out-dir interface/ --public-url ./ --target=electron --bundle-node-modules"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/fabianmoronzirfas/moscatron.git"
  },
  "keywords": [],
  "author": "",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/fabianmoronzirfas/moscatron/issues"
  },
  "homepage": "https://github.com/fabianmoronzirfas/moscatron#readme",
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "build": {
    "appId": "me.fabianmoronzirfas.me.moscatron",
    "mac": {
      "category": "utility"
    },
    "files": [
      "main/*",
      "interface/*",
      "dev-tools/**/*"
    ]
  }
}
